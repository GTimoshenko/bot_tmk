import telebot
from telebot import types
from bs4 import BeautifulSoup
from pycbrf.toolbox import ExchangeRates

TOKEN = '6640592682:AAGZqCIfKmQ3sFuLGaVy2hA_ecM4V8R1w14'
bot = telebot.TeleBot(TOKEN)

import requests
from bs4 import BeautifulSoup
import requests
from bs4 import BeautifulSoup


def get_commodity_prices(commodity_name):
    url = "https://tradingeconomics.com/commodity/iron-ore"

    headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36"
    }

    response = requests.get(url, headers=headers)

    if response.status_code == 200:
        soup = BeautifulSoup(response.text, 'html.parser')

        table = soup.find("table", class_="table-heatmap")

        if table:
            rows = table.find_all("tr")

            for row in rows:
                cells = row.find_all("td")

                # –ï—Å–ª–∏ –µ—Å—Ç—å —è—á–µ–π–∫–∏ –∏ –∏—Ö –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
                if len(cells) > 1:
                    # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ—Ç–∏—Ä–æ–≤–∫–∞—Ö –¥–ª—è –∑–∞–¥–∞–Ω–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
                    if commodity_name.lower() in cells[0].text.lower():
                        commodity_price = cells[1].text.strip()
                        return commodity_price

            # –ï—Å–ª–∏ —Ç–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω
            return None
        else:
            return None
    else:
        return None


def get_currency_rate(currency_code):
    rates = ExchangeRates()
    try:
        rate = rates[currency_code]
        return rate.rate
    except KeyError:
        return None


@bot.message_handler(commands=['start', 'help'])
def send_welcome(message):
    markup = types.ReplyKeyboardMarkup(row_width=2)
    usd_button = types.KeyboardButton('–ö—É—Ä—Å –¥–æ–ª–ª–∞—Ä–∞')
    cny_button = types.KeyboardButton('–ö—É—Ä—Å —é–∞–Ω—è')
    iron_button = types.KeyboardButton('–ö—É—Ä—Å —á—É–≥—É–Ω–∞')
    steel_button= types.KeyboardButton('–ö—É—Ä—Å —Å—Ç–∞–ª–∏')
    markup.add(usd_button, cny_button, iron_button, steel_button)

    bot.reply_to(message, "–ü—Ä–∏–≤–µ—Ç! –Ø –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É—é –≤–∞–ª—é—Ç—ã —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è –∫–µ–π—Å–∞ –æ—Ç –¢–ú–ö. –ê –ø–æ–∫–∞ —è —Å—á–∏—Ç–∞—é, –º–æ–∂–µ—à—å –≤—ã–ø–∏—Ç—å –≤–µ—á–µ—Ä–Ω–∏–π –∫–æ—Ñ–∏–π. üòâ", reply_markup=markup)


@bot.message_handler(func=lambda message: True)
def handle_all_messages(message):
    if message.text == '–ö—É—Ä—Å –¥–æ–ª–ª–∞—Ä–∞':
        usd_rate = get_currency_rate('USD')
        if usd_rate is not None:
            bot.reply_to(message, f"–ö—É—Ä—Å –¥–æ–ª–ª–∞—Ä–∞ (USD): {usd_rate}")
        else:
            bot.reply_to(message, "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫—É—Ä—Å –¥–æ–ª–ª–∞—Ä–∞.")
    elif message.text == '–ö—É—Ä—Å —é–∞–Ω—è':
        cny_rate = get_currency_rate('CNY')
        if cny_rate is not None:
            bot.reply_to(message, f"–ö—É—Ä—Å —é–∞–Ω—è (CNY): {cny_rate}")
        else:
            bot.reply_to(message, "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫—É—Ä—Å —é–∞–Ω—è.")
    elif message.text == '–ö—É—Ä—Å —á—É–≥—É–Ω–∞':
        iron_rate = get_commodity_prices("Iron Ore")
        if iron_rate is not None:
            bot.reply_to(message, f"–ö—É—Ä—Å —á—É–≥—É–Ω–∞ (Iron Ore): {iron_rate}")
        else:
            bot.reply_to(message, "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫—É—Ä—Å —á—É–≥—É–Ω–∞.")
    elif message.text == '–ö—É—Ä—Å —Å—Ç–∞–ª–∏':
        steel_rate = get_commodity_prices("Steel")
        if steel_rate is not None:
            bot.reply_to(message, f"–ö—É—Ä—Å —Å—Ç–∞–ª–∏ (Iron Ore): {steel_rate}")
        else:
            bot.reply_to(message, "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫—É—Ä—Å —Å—Ç–∞–ª–∏.")


if __name__ == "__main__":
    bot.polling(none_stop=True)
